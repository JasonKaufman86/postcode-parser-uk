name: Create Github Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build
        pip install flake8 black

    - name: Run linting
      run: |
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run formatting check
      run: |
        black --check src/

    - name: Run tests
      run: |
        python -m pip install -r requirements.txt
        python -m unittest discover tests

    - name: Build the package
      run: python -m build

    - name: Download GitHub CLI
      run: |
        curl -sSL https://github.com/cli/cli/releases/download/v2.23.0/gh_2.23.0_linux_amd64.tar.gz -o ghcli.tar.gz
        tar -xzf ghcli.tar.gz
        sudo cp gh_2.23.0_linux_amd64/bin/gh /usr/local/bin/

    - name: Create GitHub Release
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
        gh release create "${TAG_NAME}" --title "Release ${TAG_NAME}" --notes "Release notes for version ${TAG_NAME}"
        gh release view "${TAG_NAME}"

    - name: Upload release asset
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        gh release upload "${{ env.TAG_NAME }}" dist/*.tar.gz dist/*.whl --clobber
